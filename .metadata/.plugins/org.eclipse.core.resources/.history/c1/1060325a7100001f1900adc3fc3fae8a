
#define AHB1_BASE_ADDR		0x40020000
#define RCC_BASE_ADDR		(AHB1_BASE_ADDR + 0x3800)
#define GPIOA_BASE_ADDR		(AHB1_BASE_ADDR + 0x0000)
#define GPIOC_BASE_ADDR		(AHB1_BASE_ADDR + 0x0800)

#define RCC_CR			(volatile unsigned int*)(RCC_BASE_ADDR + 0x00)  //RCC_CR |= (1<<0)
#define	RCC_AHB1ENR		(volatile unsigned int*)(RCC_BASE_ADDR + 0x30)  // AHB1_ENR, GPIOA enable
// volatile - 휘발성, unsigned - 양수, int - 4byte
// 숫자(상수, data)에 포인터로 주소로 취급하고 데이터가 32bit이고, 양의 값이기 때문에 자료형을 unsigned int 로 설정
// 보드의 값을 아예 바꾸는 것이라 아니라 해당 코드 동작시에만, 값이 바뀌도록 volatile 을 취함
// 그 주소안의 값을 바꾸기 위해 *를 한번 더 취한다, *가 없으면 0x40023800 값을 바꾸는 것이고
// *가 있음으로써 0x40023800안의 값을 바꿀 수 있음

#define	GPIOA_MODER		(volatile unsigned int*)(GPIOA_BASE_ADDR + 0x00)
#define	GPIOA_OTYPER	(volatile unsigned int*)(GPIOA_BASE_ADDR + 0x04)
#define GPIOA_OSPEEDR	(volatile unsigned int*)(GPIOA_BASE_ADDR + 0x08)
#define GPIOA_ODR		(volatile unsigned int*)(GPIOA_BASE_ADDR + 0x14)

#define	GPIOC_MODER		(volatile unsigned int*)(GPIOC_BASE_ADDR + 0x00)
#define	GPIOC_OTYPER	(volatile unsigned int*)(GPIOC_BASE_ADDR + 0x04)
#define GPIOC_OSPEEDR	(volatile unsigned int*)(GPIOC_BASE_ADDR + 0x08)
#define GPIOC_ODR		(volatile unsigned int*)(GPIOC_BASE_ADDR + 0x14)

void delay(unsigned int times) {
	unsigned int temp = times * 1000;
	while (temp) temp--;
}

int main() {

	*RCC_CR |= (1 << 0); // offset = 0x00
	*RCC_AHB1ENR |= (1 << 0); // offset = 0x30
	// GPIOA Output 인가
	*GPIOA_MODER &= ~(1 << 11); // GPIOA_MODER 5 (01 : General Purpose Output)
	*GPIOA_MODER |= (1 << 10); // GPIOA_MODER 5 (01 : General Purpose Output)
	*GPIOA_OTYPER &= ~(1 << 5); // GPIOA_5 push-pull
	*GPIOA_OSPEEDR &= ~(1 << 11 | 1 << 10); // output speed : LOW

	*GPIOC_MODER &= ~(1 << 17);
	*GPIOC_MODER |= (1 << 16);
	*GPIOC_OTYPER &= ~(1 << 8);
	*GPIOC_OSPEEDR &= ~(1 << 17 | 1 << 16);


	while (1) {
		*GPIOA_ODR |= (1 << 5);
		*GPIOC_ODR |= (1 << 8);
		delay(200);
		*GPIOA_ODR &= ~(1 << 5);
		*GPIOC_ODR &= ~(1 << 8);
		delay(200);
	}

	return 0;
}
